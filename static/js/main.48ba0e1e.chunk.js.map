{"version":3,"sources":["component/Button.js","util/isNumber.js","component/Panel.js","component/Display.js","util/operate.js","util/calculate.js","component/App.js","index.js"],"names":["Button","handleClick","props","clickHandler","name","classname","this","type","className","join","onClick","React","Component","isNumber","item","parseInt","neurtal","rows","Panel","bind","buttonName","buttonPanel","Object","entries","map","buttonType","includes","Display","value","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","stateMap","button","total","next","result","App","state","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ba0e1e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes  from \"prop-types\";\n\nimport './Button.css';\n\nconst propTypes = {\n    name: PropTypes.string,\n    type: PropTypes.oneOf(['Number', 'Operator']),\n    clickHandler: PropTypes.func,\n};\n\nclass Button extends React.Component {\n\n    handleClick = () => {\n        this.props.clickHandler(this.props.name);\n    }\n\n    render() {\n        const classname = [\"button\", this.props.type, this.props.name === \"0\" ? \"wide\" : \"\"]\n        return(\n            <div className={classname.join(\" \")}>\n                <button key={this.props.name} onClick={this.handleClick}>{this.props.name}</button>\n            </div>\n        )\n    }\n}\n\nButton.propTypes = propTypes;\nexport default Button;\n","export default function isNumber(item) {\n    return (parseInt(item, 10) + 1);\n}\n","import React from \"react\";\nimport Button from './Button';\nimport PropTypes  from \"prop-types\";\n\nimport isNumber from '../util/isNumber';\nimport \"./Panel.css\";\n\nconst propTypes = {\n\n    clickHandler: PropTypes.func,\n};\n \nconst neurtal = ['AC', '+/-', '%' , '.'];\nconst rows = {\n    0: ['AC', '+/-', '%', '/'],\n    1: ['7', '8', '9', 'x'],\n    2: ['4', '5', '6', '-'],\n    3: ['1', '2', '3', '+'],\n    4: ['0', '.', '='],\n};\n\nclass Panel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(buttonName) {\n        return this.props.clickHandler(buttonName);\n    }\n\n    render() {\n\n        const buttonPanel = Object.entries(rows).map(([key, value]) => {\n            return value.map(item => {\n                let buttonType = isNumber(item) || neurtal.includes(item) ? 'Number' : 'Operator';  \n                return <Button key={item} name={item} type={buttonType} clickHandler={this.handleClick} />;\n            });\n         });\n\n        return (\n            <div className=\"panel\">\n                {buttonPanel}\n            </div>\n        );\n    }\n}\n\nPanel.propTypes = propTypes;\nexport default Panel;\n","import React from \"react\";\nimport PropTypes  from \"prop-types\";\n\nimport './Display.css';\n\nconst propTypes = {\n    value: PropTypes.string,\n};\n\nclass Display extends React.Component {\n\n    render() {\n        return(\n            <div className=\"display\">\n                <div>{this.props.value}</div>\n            </div>\n        )\n    }\n}\n\nDisplay.propTypes = propTypes\nexport default Display;\n","import Big from \"big.js\"\n\n\nexport default function operate(numberOne, numberTwo, operation) {\n\n    const one = Big(numberOne || \"0\");\n    const two = Big(numberTwo || (operation === 'รท' || operation === 'x' ? '1' : '0'));\n    switch (operation) {\n        case '+': \n            return one.plus(two).toString();\n        case '-':\n            return one.minus(two).toString();\n        case 'x':\n            return one.times(two).toString();\n        case '/':\n            if(two.toString() === \"0\") {\n                alert(\"Can not divide by 0\");\n                return '0';\n            } else {\n                return one.div(two).toString();\n            }\n        default:\n          alert(`Sorry, ${operation} is not valid.`);\n          throw Error(`Unknown operation '${operation}'`);\n    }\n}\n","import Big from 'big.js';\n\nimport operate from './operate';\nimport isNumber from './isNumber';\n\n\nfunction calculate(stateMap, button) {\n    // reset state when AC is selected\n    if (button === \"AC\") {\n        return {\n            total: null,\n            next: null,\n            operation: null,\n        }\n    }\n\n    if (isNumber(button)) {\n        if (button === \"0\" && stateMap.next === \"0\") {\n            return {};\n        }\n        if (stateMap.operation) {\n            if (stateMap.next) {\n                // concatenate value\n                return  { next: stateMap.next + button };\n            } \n            return {next: button};\n        }\n        if (stateMap.next) {\n            const next = stateMap.next === \"0\" ? button : stateMap.next + button;\n            return  { total: null, next: next };\n        }\n        return {\n            total: null,\n            next: button,\n        }\n    }\n\n    if (button === \".\") {\n        if (stateMap.next) {\n            if (stateMap.next.includes(\".\")) {\n                return {};\n            }\n            return {next: stateMap.next + \".\"};\n        }\n        return {next: \"0.\"};\n\n    }\n    if (button === \"%\") {\n        // console.log(stateMap);\n        if (stateMap.next) {\n            if (stateMap.operation) {\n                const result = operate(stateMap.total, stateMap.next, stateMap.operation);\n                return {next: null, total: Big(result).div(Big(\"100\")).toString()};\n            }\n            return {next: Big(stateMap.next).div(Big(\"100\")).toString()};\n        }  \n\n        return {};\n    }\n\n    if (button === \"=\") {\n        if (stateMap.next && stateMap.operation) {\n            return {\n                total: operate(stateMap.total, stateMap.next, stateMap.operation),\n                next: null,\n                operation: null,\n            };\n        } else {\n            return {};\n        }\n    }\n\n    if (button === \"+/-\") {\n        if (stateMap.next) {\n            return {next: (-1 * (stateMap.next)).toString() };\n        }\n        if (stateMap.total) {\n            return {total: (-1 * (stateMap.total)).toString() };\n        }\n        return {};\n    }\n\n\n    if (stateMap.operation) {\n        return {\n            total: operate(stateMap.total, stateMap.next, stateMap.operation),\n            next: null,\n            operation: button,\n        };\n    }\n\n    if (!stateMap.next) {\n        return {operation: button };\n    }\n\n    return {\n        total: stateMap.next,\n        next: null,\n        operation: button,\n    };\n}\nexport default calculate;\n","import React from \"react\";\nimport Panel from './Panel';\nimport Display from './Display';\nimport calculate from '../util/calculate';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(buttonName) {\n    const result = calculate(this.state, buttonName);\n    this.setState(result);\n}\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Display value = {this.state.next || this.state.total || \"0\"} />\n        <Panel clickHandler={this.handleClick} />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}